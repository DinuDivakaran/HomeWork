@{
    ViewBag.Title = "Home Page";
}

<div id="container">
    <input type="text" data-role="dropdownlist" data-option-label="Select a product" data-text-field="ProductName" data-value-field="ProductID" 
        data-bind="source: products, value: selectedProduct"/>
    <div data-bind="visible: isVisible">
        <hr />
        <input type="text" class="k-textbox" data-bind="value: selectedProduct.ProductName" />
        <input type="text" data-role="combobox" data-text-field="CategoryName" data-value-field="CategoryID"
            data-bind="source: categories, value: selectedProduct.CategoryID"/>
       <input type="text" data-role="combobox" data-text-field="name" data-min-length="1" data-value-field="value"
            data-bind="source: prices, value: selectedProduct.UnitPrice"/>
        <hr />
        <div data-bind="text: selectedProductSource">
        </div>
    </div>     
</div>

<script type="text/javascript">
    var productViewModel = kendo.data.Model.define({
        id: "ProductID",
        fields: {
            ProductID: { type: "number", nullable: false, editable: false },
            ProductName: { type: "string", validation: { required: true} },
            UnitPrice: { type: "number", nullable: true, validation: { min: 0, max: 100} },
            UnitsInStock: { type: "number", nullable: false },
            CategoryID: { type: "number", nullable: true }
        }
    });

    var obj = {
        selectedProduct: null,
        products: new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("Products","Home")'
                }
            },
            schema: {
                mode: productViewModel
            }
        }),
        categories: new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("Categories","Home")'
                }
            }
        }),
        prices: [{ name: "Low", value: 1 }, { name: "Medium", value: 50 }, { name: "High", value: 100}],
        viewModelSource: "",
        isVisible: function () {
            return this.get("selectedProduct") != null;
        },
        initialize: function (e) {
            this.products.read();
            this.categories.read();
            this.bind("change", this.selectedProductChange);
        },
        selectedProductChange: function (e) {
            if (e.field.indexOf("selectedProduct") >= 0) {
                var product = this.get("selectedProduct");
                this.set("selectedProductSource", kendo.stringify(product != null ? product.toJSON() : {}));
            }
        },
        selectedProductSource: ""
    };

    var model = kendo.data.Model.define({
        fields: {
            selectedProduct: { defaultValue: null },
            "selectedProduct.CategoryID": { type: "number", nullable: true }
        }
    });

    var viewModel = new model(obj);

    //var viewModel = kendo.observable(obj);    

    viewModel.initialize();
    $(function () {
        kendo.bind(document.getElementById("container"), viewModel);
    });

</script>
